type Event @entity {
  id: ID!
  block_id: Int!
  event_idx: Int!
  extrinsic_idx: Int
  spec_version_id: Int!
  module_id: String! @index(unique: false)
  event_id: String! @index(unique: false)
  attributes_txt: String!
  event_arg_0: String
  event_arg_1: String
  event_arg_2: String
  event_arg_3: String
  claim_type: String
  claim_scope: String
  claim_issuer: String
  claim_expiry: String
  corporate_action_ticker: String
  fundraiser_offering_asset: String
  transfer_to: String
}

type Debug @entity {
  id: ID!
  line: String
  context: String
}

type FoundType @entity {
  id: ID!
  rawType: String!
}

type Block @entity {
  id: ID!
  block_id: Int!
  parent_id: Int!
  hash: String!
  parent_hash: String!
  state_root: String!
  extrinsics_root: String!
  count_extrinsics: Int!
  count_extrinsics_unsigned: Int!
  count_extrinsics_signed: Int!
  count_extrinsics_error: Int!
  count_extrinsics_success: Int!
  count_events: Int!
  datetime: Date!
  spec_version_id: String!
}

type Extrinsic @entity {
  id: ID!
  block_id: Int!
  extrinsic_idx: Int!
  extrinsic_length: String!
  signed: Int!
  signedby_address: Int!
  address: String
  module_id: String!
  call_id: String!
  params_txt: String!
  success: Int!
  nonce: Int
  extrinsic_hash: String
  spec_version_id: Int!
}

type AssetHolder @jsonField {
  did: String!
  amount: String!
}

type AssetDocument @jsonField {
  id: Int! # document id
  name: String!
  link: String!
}

type AssetIdentifier @jsonField {
  type: String!
  value: String!
}

type Settlement @entity {
  id: ID!
  settlementId: Int! @index(unique: false) # not unique due to multiple legs
  from: String! @index(unique: false)
  to: String! @index(unique: false)
  ticker: String! @index(unique: false)
  amount: String!
}

type Authorization @entity {
  id: ID! # authorization id
  source: String! @index(unique: false)
  target: String! @index(unique: false)
  type: String! @index(unique: false)
  ticker: String @index(unique: false)
  data: String
}

type AssetComplianceRequirement @jsonField {
  id: Int! # requirement id
  data: String!
}

type AssetCompliance @jsonField {
  isPaused: Boolean!
  sender: [AssetComplianceRequirement]!
  receiver: [AssetComplianceRequirement]!
}

type Asset @entity {
  id: ID! # ticker
  ticker: String! @index(unique: true)
  name: String @index(unique: false)
  type: String @index(unique: false)
  fundingRound: String @index(unique: false)
  isDivisible: Boolean!
  isFrozen: Boolean!
  isUniquenessRequired: Boolean!
  documents: [AssetDocument]!
  identifiers: [AssetIdentifier]!
  ownerDid: String!
  fullAgents: [String!]!
  holders: [AssetHolder]!
  totalSupply: String!
  totalTransfers: String!
  compliance: AssetCompliance!
}
