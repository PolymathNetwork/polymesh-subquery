type Event @entity {
  id: ID!
  blockId: Int!
  eventIdx: Int!
  extrinsicIdx: Int
  specVersionId: Int!
  moduleId: String! @index(unique: false)
  eventId: String! @index(unique: false)
  attributesTxt: String!
  eventArg_0: String
  eventArg_1: String
  eventArg_2: String
  eventArg_3: String
  claimType: String
  claimScope: String
  claimIssuer: String
  claimExpiry: String
  corporateActionTicker: String
  fundraiserOfferingAsset: String
  transferTo: String
}

type Debug @entity {
  id: ID!
  line: String
  context: String
}

type FoundType @entity {
  id: ID! # This is type
  rawType: String!
}

type Block @entity {
  id: ID!
  blockId: Int!
  parentId: Int!
  hash: String!
  parentHash: String!
  stateRoot: String!
  extrinsicsRoot: String!
  countExtrinsics: Int!
  countExtrinsicsUnsigned: Int!
  countExtrinsicsSigned: Int!
  countExtrinsicsError: Int!
  countExtrinsicsSuccess: Int!
  countEvents: Int!
  datetime: Date!
  specVersionId: String!
}

type Extrinsic @entity {
  id: ID!
  blockId: Int!
  extrinsicIdx: Int!
  extrinsicLength: String!
  signed: Int!
  signedbyAddress: Int!
  address: String
  moduleId: String!
  callId: String!
  paramsTxt: String!
  success: Int!
  nonce: Int
  extrinsicHash: String
  specVersionId: Int!
}

type StakingEvent @entity {
  id: ID!
  blockId: Int! @index
  eventIdx: Int! @index
  stakingEventId: String! @index
  date: Date! @index
  identityId: String
  stashAccount: String
  amount: BigInt
  nominatedValidators: [String!]
}

type TickerExternalAgentAction @entity {
  id: ID!
  blockId: Int! @index
  eventIdx: Int! @index
  ticker: String! @index
  palletName: String! @index
  eventId: String! @index
  callerDid: String! @index
  datetime: Date!
}

type Funding @entity {
  id: ID!
  blockId: Int!
  ticker: String! @index(unique: false)
  fundingName: String! @index(unique: false)
  value: String!
  totalIssuedInFundingRound: String!
}

type Sto @entity {
  id: ID!
  offeringAsset: String!
}

type Authorization @entity {
  id: ID!
  createdBlock: Int!
  authId: Int! @index
  type: String! @index
  fromDid: String! @index
  toDid: String @index
  toKey: String @index
  data: String
  expiry: Date @index
  status: String!
  updatedBlock: Int!
}

type Investment @entity {
  id: ID!
  blockId: Int!
  investor: String!
  stoId: Int! @index
  offeringToken: String! @index
  raiseToken: String!
  offeringTokenAmount: BigInt!
  raiseTokenAmount: BigInt!
  datetime: Date!
}

type TickerExternalAgentAdded @entity {
  id: ID! #ticker/caller_did
  ticker: String! @index
  callerDid: String! @index
  blockId: Int!
  eventIdx: Int!
  datetime: Date!
}

# Type can be "AgentAdded", "AgentPermissionsChanged" or "AgentRemoved".
# permissions is only present in "AgentAdded" and "AgentPermissionsChanged".
type TickerExternalAgentHistory @entity {
  id: ID! #block_di/event_idx/did
  ticker: String! @index
  did: String! @index
  blockId: Int!
  eventIdx: Int!
  datetime: Date!
  type: String!
  permissions: String
}

type AgentGroup @entity {
  id: ID! #ticker/group_id
  permissions: String!
  members: [AgentGroupMembership!]! @derivedFrom(field: "group")
}

type AgentGroupMembership @entity {
  id: ID! #ticker/group_id/member
  member: String! @index
  group: AgentGroup! @index
}
